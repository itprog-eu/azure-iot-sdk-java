name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

jobs:
 ### Android, Multi configuration build (12 different test groups to cover) ###
- job: AndroidBuild
  timeoutInMinutes: 45
  pool:
    name: Hosted VS2017
  displayName: Android Build

  steps:
  - powershell: ./vsts/echo_versions.ps1
    displayName: 'Echo Versions'
    env:
      COMMIT_FROM: $(COMMIT_FROM)
    condition: always()

  - powershell: ./vsts/android_java.cmd
    displayName: 'Android Build'
    env:
      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)
      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)
      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)
      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)
      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)
      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)
      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)
      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)
      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)
      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)
      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB) 
    condition: always()
      
  - task: CopyFiles@2
    displayName: 'Copy Test Results to Artifact Staging Directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'
      Contents: |
       *.*
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    continueOnError: true
    condition: always()
    
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'androidBuildFiles'
      targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'
    
- job: AndroidTest
  timeoutInMinutes: 180
  pool:
    vmImage: 'macOS-latest'
  strategy:
    maxParallel: 12
    matrix:
      TestGroup1:
        ANDROID_TEST_GROUP_ID: TestGroup1
      TestGroup2:
        ANDROID_TEST_GROUP_ID: TestGroup2
      TestGroup3:
        ANDROID_TEST_GROUP_ID: TestGroup3
      TestGroup4:
        ANDROID_TEST_GROUP_ID: TestGroup4
      TestGroup5:
        ANDROID_TEST_GROUP_ID: TestGroup5
      TestGroup6:
        ANDROID_TEST_GROUP_ID: TestGroup6
      TestGroup7:
        ANDROID_TEST_GROUP_ID: TestGroup7
      TestGroup8:
        ANDROID_TEST_GROUP_ID: TestGroup8
      TestGroup9:
        ANDROID_TEST_GROUP_ID: TestGroup9
      TestGroup10:
        ANDROID_TEST_GROUP_ID: TestGroup10
      TestGroup11:
        ANDROID_TEST_GROUP_ID: TestGroup11
      TestGroup12:
        ANDROID_TEST_GROUP_ID: TestGroup12
      TestGroup13:
        ANDROID_TEST_GROUP_ID: TestGroup13
      TestGroup14:
        ANDROID_TEST_GROUP_ID: TestGroup14
      TestGroup15:
        ANDROID_TEST_GROUP_ID: TestGroup15
      TestGroup16:
        ANDROID_TEST_GROUP_ID: TestGroup16
      TestGroup17:
        ANDROID_TEST_GROUP_ID: TestGroup17
      TestGroup18:
        ANDROID_TEST_GROUP_ID: TestGroup18
      TestGroup19:
        ANDROID_TEST_GROUP_ID: TestGroup19
      TestGroup20:
        ANDROID_TEST_GROUP_ID: TestGroup20
      TestGroup21:
        ANDROID_TEST_GROUP_ID: TestGroup21
      TestGroup22:
        ANDROID_TEST_GROUP_ID: TestGroup22
      TestGroup23:
        ANDROID_TEST_GROUP_ID: TestGroup23
      TestGroup24:
        ANDROID_TEST_GROUP_ID: TestGroup24
      TestGroup25:
        ANDROID_TEST_GROUP_ID: TestGroup25
      TestGroup26:
        ANDROID_TEST_GROUP_ID: TestGroup26
      TestGroup27:
        ANDROID_TEST_GROUP_ID: TestGroup27
      TestGroup28:
        ANDROID_TEST_GROUP_ID: TestGroup28
      TestGroup29:
        ANDROID_TEST_GROUP_ID: TestGroup29
      TestGroup30:
        ANDROID_TEST_GROUP_ID: TestGroup30
      TestGroup31:
        ANDROID_TEST_GROUP_ID: TestGroup31
      TestGroup32:
        ANDROID_TEST_GROUP_ID: TestGroup32
      TestGroup33:
        ANDROID_TEST_GROUP_ID: TestGroup33
      TestGroup34:
        ANDROID_TEST_GROUP_ID: TestGroup34
      TestGroup35:
        ANDROID_TEST_GROUP_ID: TestGroup35
      TestGroup36:
        ANDROID_TEST_GROUP_ID: TestGroup36
      TestGroup37:
        ANDROID_TEST_GROUP_ID: TestGroup37
      TestGroup38:
        ANDROID_TEST_GROUP_ID: TestGroup38
      TestGroup39:
        ANDROID_TEST_GROUP_ID: TestGroup39
      
  displayName: Android Test
  dependsOn: AndroidBuild
  steps:
  - task: PowerShell@2
    displayName: 'determine if testing needed'
    condition: always()
    inputs:
      targetType: 'filePath'
      filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1
    env:
      TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)
      TARGET_BRANCH: $(System.PullRequest.TargetBranch)

  - task: PowerShell@2
    displayName: 'Install app center cli'
    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
    inputs:
      targetType: 'filePath'
      filePath: './vsts/install_appcenter_cli.ps1'

  - task: DownloadPipelineArtifact@0
    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
    inputs:
      artifactName: 'androidBuildFiles'
      targetPath: $(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk
  
  - task: AppCenterTest@1
    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')
    displayName: 'E2E with Visual Studio App Center'
    inputs:
      appFile: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk'
      frameworkOption: espresso
      espressoBuildDirectory: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug'
      serverEndpoint: 'AppCenter connection aziotclb'
      appSlug: 'Azure-Iot-Sdk/androide2e'
      devices: 'Azure-Iot-Sdk/api17'
      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.$(ANDROID_TEST_GROUP_ID)'
      showDebugOutput: true